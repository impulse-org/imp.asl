
Options in effect for E:/RMF/eclipse/workspaces/imp-3.2/org.eclipse.imp.asl/src/org/eclipse/imp/asl/parser/ASLParser.g:

    ACTION-BLOCK=("E:\RMF\eclipse\workspaces\imp-3.2\org.eclipse.imp.asl\src\org\eclipse\imp\asl\parser\ASLParser.java","/.","./")

    AST-DIRECTORY="./ast"  AST-TYPE="ASTNode"  NOATTRIBUTES  
    AUTOMATIC-AST=TOPLEVEL  NOBACKTRACK  BYTE  CONFLICTS  
    DAT-DIRECTORY="E:\RMF\eclipse\workspaces\imp-3.2\org.eclipse.imp.asl\src\org\eclipse\imp\asl\parser\"
    
    DAT-FILE="E:\RMF\eclipse\workspaces\imp-3.2\org.eclipse.imp.asl\src\org\eclipse\imp\asl\parser\ASLParserdcl.data"
    
    DCL-FILE="E:\RMF\eclipse\workspaces\imp-3.2\org.eclipse.imp.asl\src\org\eclipse\imp\asl\parser\ASLParserdcl.java"
    NODEBUG  
    DEF-FILE="E:\RMF\eclipse\workspaces\imp-3.2\org.eclipse.imp.asl\src\org\eclipse\imp\asl\parser\ASLParserdef.java"
    NOEDIT  ERROR-MAPS  ESCAPE='$'  
    EXPORT-TERMINALS=("E:\RMF\eclipse\workspaces\imp-3.2\org.eclipse.imp.asl\src\org\eclipse\imp\asl\parser\ASLParserexp.java","","")
    EXTENDS-PARSETABLE  FACTORY="new "  FILE-PREFIX="ASLParser"  NOFIRST  
    NOFOLLOW  NOGLR  NOGOTO-DEFAULT  
    GRM-FILE="E:/RMF/eclipse/workspaces/imp-3.2/org.eclipse.imp.asl/src/org/eclipse/imp/asl/parser/ASLParser.g"
    
    IMP-FILE="E:\RMF\eclipse\workspaces\imp-3.2\org.eclipse.imp.asl\src\org\eclipse\imp\asl\parser\ASLParserimp.java"
    IMPORT-TERMINALS="ASLLexer.gi"  
    INCLUDE-DIRECTORY="E:\RMF\eclipse\workspaces\imp-3.2\lpg.runtime.java\templates;E:\RMF\eclipse\workspaces\imp-3.2\org.eclipse.imp.lpg.metatooling\templates;E:\RMF\eclipse\workspaces\imp-3.2\lpg.runtime.java\include;"
    LALR=1  LEGACY  NOLIST  MARGIN=4  MAX-CASES=1024  NAMES=OPTIMIZED  
    NONT-CHECK  OR_MARKER='|'  
    OUT-DIRECTORY="E:\RMF\eclipse\workspaces\imp-3.2\org.eclipse.imp.asl\src\org\eclipse\imp\asl\parser\"
    PACKAGE="org.eclipse.imp.asl.parser"  PARENT-SAVED  
    PARSETABLE-INTERFACES="lpg.runtime.ParseTable"  PREFIX="TK_"  PRIORITY  
    PROGRAMMING_LANGUAGE=JAVA  
    PRS-FILE="E:\RMF\eclipse\workspaces\imp-3.2\org.eclipse.imp.asl\src\org\eclipse\imp\asl\parser\ASLParserprs.java"
    NOQUIET  READ-REDUCE  REMAP-TERMINALS  SCOPES  NOSERIALIZE  NOSHIFT-DEFAULT
    NOSINGLE-PRODUCTIONS  NOSOFT-KEYWORDS  NOSTATES  SUFFIX=""  
    SYM-FILE="E:\RMF\eclipse\workspaces\imp-3.2\org.eclipse.imp.asl\src\org\eclipse\imp\asl\parser\ASLParsersym.java"
    TAB-FILE="ASLParser.t"  TABLE  TEMPLATE="dtParserTemplateF.gi"  
    TRACE=CONFLICTS  VARIABLES  NOVERBOSE  VISITOR=PREORDER  
    VISITOR-TYPE="Visitor"  WARNINGS  NOXREF  

E:/RMF/eclipse/workspaces/imp-3.2/org.eclipse.imp.asl/src/org/eclipse/imp/asl/parser/ASLParser.g:70:5:70:19:1181:1195: Warning: Not all rules generated by this nonterminal are associated with this list
E:/RMF/eclipse/workspaces/imp-3.2/org.eclipse.imp.asl/src/org/eclipse/imp/asl/parser/ASLParser.g:51:5:51:12:878:885: Informative: The terminal NOTEQUAL is useless.
E:/RMF/eclipse/workspaces/imp-3.2/org.eclipse.imp.asl/src/org/eclipse/imp/asl/parser/ASLKWLexer.gi:23:5:23:10:305:310: Informative: The terminal return is useless.
E:/RMF/eclipse/workspaces/imp-3.2/org.eclipse.imp.asl/src/org/eclipse/imp/asl/parser/ASLLexer.gi:21:5:21:23:361:379: Informative: The terminal SINGLE_LINE_COMMENT is useless.
E:/RMF/eclipse/workspaces/imp-3.2/org.eclipse.imp.asl/src/org/eclipse/imp/asl/parser/ASLLexer.gi:28:5:28:13:483:491: Informative: The terminal SEMICOLON is useless.


 IBM LALR Parser Generator              1.01 (Feb 22 2008)


---------------------------------- CONFLICTS ----------------------------------



STATE 14 -----------------------------------------------------------------------
( 2 )

typeName ::= boolean . (45)
scalarType ::= boolean . (113)

*** Reduce/reduce conflict on "IDENTIFIER" between rule 45 and 113

variableDeclaration ::= .typeName identifier value 
typeName ::= boolean . (45)
------------------------------------------------------------------------------
functionHeader ::= .typeSpecifier identifier LEFTPAREN parameters RIGHTPAREN 
typeSpecifier ::= .scalarType 
scalarType ::= boolean . (113)




STATE 15 -----------------------------------------------------------------------
( 2 )

typeName ::= string . (46)
scalarType ::= string . (112)

*** Reduce/reduce conflict on "IDENTIFIER" between rule 46 and 112

variableDeclaration ::= .typeName identifier value 
typeName ::= string . (46)
------------------------------------------------------------------------------
functionHeader ::= .typeSpecifier identifier LEFTPAREN parameters RIGHTPAREN 
typeSpecifier ::= .scalarType 
scalarType ::= string . (112)




STATE 16 -----------------------------------------------------------------------
( 2 )

typeName ::= double . (44)
scalarType ::= double . (111)

*** Reduce/reduce conflict on "IDENTIFIER" between rule 44 and 111

variableDeclaration ::= .typeName identifier value 
typeName ::= double . (44)
------------------------------------------------------------------------------
functionHeader ::= .typeSpecifier identifier LEFTPAREN parameters RIGHTPAREN 
typeSpecifier ::= .scalarType 
scalarType ::= double . (111)




STATE 17 -----------------------------------------------------------------------
( 2 )

typeName ::= int . (43)
scalarType ::= int . (110)

*** Reduce/reduce conflict on "IDENTIFIER" between rule 43 and 110

variableDeclaration ::= .typeName identifier value 
typeName ::= int . (43)
------------------------------------------------------------------------------
functionHeader ::= .typeSpecifier identifier LEFTPAREN parameters RIGHTPAREN 
typeSpecifier ::= .scalarType 
scalarType ::= int . (110)




STATE 18 -----------------------------------------------------------------------
( 2 )

typeName ::= identifier . (42)
qualifiedIdentifier ::= identifier . (114)

*** Reduce/reduce conflict on "IDENTIFIER" between rule 42 and 114

variableDeclaration ::= .typeName identifier value 
typeName ::= identifier . (42)
------------------------------------------------------------------------------
functionHeader ::= .typeSpecifier identifier LEFTPAREN parameters RIGHTPAREN 
typeSpecifier ::= .qualifiedIdentifier 
qualifiedIdentifier ::= identifier . (114)




STATE 23 -----------------------------------------------------------------------
( 6 23 )

rulesList ::= rule . (28)
rulesList ::= rule  .rulesList 

rulesList ::= .rule 
rulesList ::= .rule rulesList 
rule ::= .algebraicTypeValue ARROW algebraicTypeValue 
identifier ::= .IDENTIFIER 
algebraicTypeValue ::= .identifier optArgList 

*** Shift/reduce conflict on "IDENTIFIER" with rule 28

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .rulesSpecification 
rulesSpecification ::= rules  .rulesList 
rulesList ::= rule . (28)




STATE 34 -----------------------------------------------------------------------
( 21 33 38 39 41 42 52 54 55 56 58 64 77 83 84 97 110 115 )

caseExpr ::= case  .caseList 

identifier ::= .IDENTIFIER 
caseList ::= .caseSpec 
caseList ::= .caseList caseSpec 
caseSpec ::= .identifier EQUAL value COLON value 
caseSpec ::= . (94)
caseSpec ::= .else value 

*** Shift/reduce conflict on "IDENTIFIER" with rule 94

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= . (94)

*** Shift/reduce conflict on "else" with rule 94

caseList ::= .caseList caseSpec 
caseList ::= .caseSpec 
caseSpec ::= . (94)




STATE 35 -----------------------------------------------------------------------
( 21 33 38 39 41 42 52 54 55 56 58 64 77 83 84 97 110 115 )

value ::= identifier . (64)
algebraicTypeValue ::= identifier  .optArgList 
functionCall ::= identifier  .LEFTPAREN values RIGHTPAREN 

optArgList ::= . (81)
optArgList ::= .LEFTPAREN values RIGHTPAREN 

*** Reduce/reduce conflict on "EOF_TOKEN" between rule 81 and 64

'$accept' ::= .compilationUnit 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
'$accept' ::= .compilationUnit 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "RIGHTBRACE" between rule 81 and 64

setLiteral ::= LEFTBRACE  .values RIGHTBRACE 
values ::= .valueList 
valueList ::= .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
setLiteral ::= LEFTBRACE  .values RIGHTBRACE 
values ::= .valueList 
valueList ::= .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "LEFTBRACE" between rule 81 and 64

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "RIGHTPAREN" between rule 81 and 64

optArgList ::= LEFTPAREN  .values RIGHTPAREN 
values ::= .valueList 
valueList ::= .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
optArgList ::= LEFTPAREN  .values RIGHTPAREN 
values ::= .valueList 
valueList ::= .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "RIGHTBRACKET" between rule 81 and 64

mapLookup ::= value LEFTBRACKET  .value RIGHTBRACKET 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
mapLookup ::= value LEFTBRACKET  .value RIGHTBRACKET 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "LEFTBRACKET" between rule 81 and 64

mapLookup ::= .value LEFTBRACKET value RIGHTBRACKET 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
mapLookup ::= .value LEFTBRACKET value RIGHTBRACKET 
value ::= identifier . (64)

*** Reduce/reduce conflict on "STAR" between rule 81 and 64

relationClosure ::= .value STAR 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
relationClosure ::= .value STAR 
value ::= identifier . (64)

*** Reduce/reduce conflict on "PLUS" between rule 81 and 64

relationClosure ::= .value PLUS 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
relationClosure ::= .value PLUS 
value ::= identifier . (64)

*** Reduce/reduce conflict on "ARROW" between rule 81 and 64

mapping ::= .value ARROW value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
mapping ::= .value ARROW value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "GREATER" between rule 81 and 64

tupleLiteral ::= LESS  .values GREATER 
values ::= .valueList 
valueList ::= .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
tupleLiteral ::= LESS  .values GREATER 
values ::= .valueList 
valueList ::= .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "LESS" between rule 81 and 64

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "DOT" between rule 81 and 64

tupleSlot ::= .value DOT identifier 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
tupleSlot ::= .value DOT identifier 
value ::= identifier . (64)

*** Reduce/reduce conflict on "COMMA" between rule 81 and 64

valueList ::= .value COMMA valueList 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
valueList ::= .value COMMA valueList 
value ::= identifier . (64)

*** Reduce/reduce conflict on "COLON" between rule 81 and 64

caseSpec ::= identifier EQUAL  .value COLON value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
caseSpec ::= identifier EQUAL  .value COLON value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "StringLiteral" between rule 81 and 64

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "DoubleLiteral" between rule 81 and 64

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "IntegerLiteral" between rule 81 and 64

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "IDENTIFIER" between rule 81 and 64

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "union" between rule 81 and 64

unionExpr ::= .value union value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
unionExpr ::= .value union value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "type" between rule 81 and 64

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "true" between rule 81 and 64

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "string" between rule 81 and 64

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "set" between rule 81 and 64

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "rules" between rule 81 and 64

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "relation" between rule 81 and 64

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "ref" between rule 81 and 64

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "else" between rule 81 and 64

caseList ::= .caseList caseSpec 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
caseList ::= .caseList caseSpec 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "intersect" between rule 81 and 64

intersectExpr ::= .value intersect value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
intersectExpr ::= .value intersect value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "int" between rule 81 and 64

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "false" between rule 81 and 64

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "estimates" between rule 81 and 64

analysisSpecification ::= analysis identifier  .constraintsDef estimatesDef 
                          satisfyDef end 
constraintsDef ::= constraints  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
analysisSpecification ::= analysis identifier  .constraintsDef estimatesDef 
                          satisfyDef end 
constraintsDef ::= constraints  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "double" between rule 81 and 64

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "case" between rule 81 and 64

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "boolean" between rule 81 and 64

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "atype" between rule 81 and 64

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= identifier . (64)

*** Reduce/reduce conflict on "analysis" between rule 81 and 64

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= . (81)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= identifier . (64)




STATE 38 -----------------------------------------------------------------------
( 21 33 38 39 41 42 52 54 55 56 58 64 77 83 84 97 110 115 )

setLiteral ::= LEFTBRACE  .values RIGHTBRACE 
mapLiteral ::= LEFTBRACE  .mappings RIGHTBRACE 

identifier ::= .IDENTIFIER 
value ::= .tupleLiteral 
value ::= .setLiteral 
value ::= .mapLiteral 
value ::= .relationLiteral 
value ::= .mapLookup 
value ::= .tupleSlot 
value ::= .algebraicTypeValue 
value ::= .IntegerLiteral 
value ::= .DoubleLiteral 
value ::= .StringLiteral 
value ::= .booleanValue 
value ::= .functionCall 
value ::= .caseExpr 
value ::= .unionExpr 
value ::= .intersectExpr 
value ::= .relationClosure 
value ::= .identifier 
tupleLiteral ::= .LESS values GREATER 
setLiteral ::= .LEFTBRACE values RIGHTBRACE 
mapLiteral ::= .LEFTBRACE mappings RIGHTBRACE 
mappings ::= . (68)
mappings ::= .mappingList 
mappingList ::= .mapping 
mappingList ::= .mappingList mapping 
mapping ::= .value ARROW value 
relationLiteral ::= .LEFTBRACKET tuples RIGHTBRACKET 
mapLookup ::= .value LEFTBRACKET value RIGHTBRACKET 
tupleSlot ::= .value DOT identifier 
algebraicTypeValue ::= .identifier optArgList 
booleanValue ::= .true 
booleanValue ::= .false 
functionCall ::= .identifier LEFTPAREN values RIGHTPAREN 
values ::= . (86)
values ::= .valueList 
valueList ::= .value 
valueList ::= .value COMMA valueList 
caseExpr ::= .case caseList 
unionExpr ::= .value union value 
intersectExpr ::= .value intersect value 
relationClosure ::= .value PLUS 
relationClosure ::= .value STAR 

*** Reduce/reduce conflict on "RIGHTBRACE" between rule 68 and 86

mapLiteral ::= LEFTBRACE  .mappings RIGHTBRACE 
mappings ::= . (68)
------------------------------------------------------------------------------
setLiteral ::= LEFTBRACE  .values RIGHTBRACE 
values ::= . (86)




STATE 51 -----------------------------------------------------------------------
( 34 )

caseExpr ::= case caseList . (90)
caseList ::= caseList  .caseSpec 

identifier ::= .IDENTIFIER 
caseSpec ::= .identifier EQUAL value COLON value 
caseSpec ::= . (94)
caseSpec ::= .else value 

*** Shift/reduce conflict on "IDENTIFIER" with rule 94

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)

*** Shift/reduce conflict on "IDENTIFIER" with rule 90

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Shift/reduce conflict on "else" with rule 94

caseList ::= .caseList caseSpec 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)

*** Shift/reduce conflict on "else" with rule 90

caseList ::= .caseList caseSpec 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "EOF_TOKEN" between rule 94 and 90

'$accept' ::= .compilationUnit 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
'$accept' ::= .compilationUnit 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "RIGHTBRACE" between rule 94 and 90

setLiteral ::= LEFTBRACE  .values RIGHTBRACE 
values ::= .valueList 
valueList ::= .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
setLiteral ::= LEFTBRACE  .values RIGHTBRACE 
values ::= .valueList 
valueList ::= .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "LEFTBRACE" between rule 94 and 90

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "RIGHTPAREN" between rule 94 and 90

optArgList ::= LEFTPAREN  .values RIGHTPAREN 
values ::= .valueList 
valueList ::= .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
optArgList ::= LEFTPAREN  .values RIGHTPAREN 
values ::= .valueList 
valueList ::= .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "RIGHTBRACKET" between rule 94 and 90

mapLookup ::= value LEFTBRACKET  .value RIGHTBRACKET 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
mapLookup ::= value LEFTBRACKET  .value RIGHTBRACKET 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "LEFTBRACKET" between rule 94 and 90

mapLookup ::= .value LEFTBRACKET value RIGHTBRACKET 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
mapLookup ::= .value LEFTBRACKET value RIGHTBRACKET 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "STAR" between rule 94 and 90

relationClosure ::= .value STAR 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
relationClosure ::= .value STAR 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "PLUS" between rule 94 and 90

relationClosure ::= .value PLUS 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
relationClosure ::= .value PLUS 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "ARROW" between rule 94 and 90

mapping ::= .value ARROW value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
mapping ::= .value ARROW value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "GREATER" between rule 94 and 90

tupleLiteral ::= LESS  .values GREATER 
values ::= .valueList 
valueList ::= .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
tupleLiteral ::= LESS  .values GREATER 
values ::= .valueList 
valueList ::= .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "LESS" between rule 94 and 90

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "DOT" between rule 94 and 90

tupleSlot ::= .value DOT identifier 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
tupleSlot ::= .value DOT identifier 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "COMMA" between rule 94 and 90

valueList ::= .value COMMA valueList 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
valueList ::= .value COMMA valueList 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "COLON" between rule 94 and 90

caseSpec ::= identifier EQUAL  .value COLON value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
caseSpec ::= identifier EQUAL  .value COLON value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "StringLiteral" between rule 94 and 90

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "DoubleLiteral" between rule 94 and 90

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "IntegerLiteral" between rule 94 and 90

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "union" between rule 94 and 90

unionExpr ::= .value union value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
unionExpr ::= .value union value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "type" between rule 94 and 90

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "true" between rule 94 and 90

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "string" between rule 94 and 90

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "set" between rule 94 and 90

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "rules" between rule 94 and 90

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "relation" between rule 94 and 90

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "ref" between rule 94 and 90

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "intersect" between rule 94 and 90

intersectExpr ::= .value intersect value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
intersectExpr ::= .value intersect value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "int" between rule 94 and 90

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "false" between rule 94 and 90

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "estimates" between rule 94 and 90

analysisSpecification ::= analysis identifier  .constraintsDef estimatesDef 
                          satisfyDef end 
constraintsDef ::= constraints  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
analysisSpecification ::= analysis identifier  .constraintsDef estimatesDef 
                          satisfyDef end 
constraintsDef ::= constraints  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "double" between rule 94 and 90

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "case" between rule 94 and 90

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "boolean" between rule 94 and 90

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "atype" between rule 94 and 90

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)

*** Reduce/reduce conflict on "analysis" between rule 94 and 90

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= caseList  .caseSpec 
caseSpec ::= . (94)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .caseExpr 
caseExpr ::= case caseList . (90)




STATE 76 -----------------------------------------------------------------------
( 52 )

mapLookup ::= value  .LEFTBRACKET value RIGHTBRACKET 
tupleSlot ::= value  .DOT identifier 
caseSpec ::= else value . (95)
unionExpr ::= value  .union value 
intersectExpr ::= value  .intersect value 
relationClosure ::= value  .PLUS 
relationClosure ::= value  .STAR 

*** Shift/reduce conflict on "STAR" with rule 95

relationClosure ::= .value STAR 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else value . (95)

*** Shift/reduce conflict on "PLUS" with rule 95

relationClosure ::= .value PLUS 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else value . (95)

*** Shift/reduce conflict on "intersect" with rule 95

intersectExpr ::= .value intersect value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else value . (95)

*** Shift/reduce conflict on "union" with rule 95

unionExpr ::= .value union value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else value . (95)

*** Shift/reduce conflict on "DOT" with rule 95

tupleSlot ::= .value DOT identifier 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else value . (95)

*** Shift/reduce conflict on "LEFTBRACKET" with rule 95

mapLookup ::= .value LEFTBRACKET value RIGHTBRACKET 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else value . (95)




STATE 79 -----------------------------------------------------------------------
( 55 )

mapLookup ::= value  .LEFTBRACKET value RIGHTBRACKET 
tupleSlot ::= value  .DOT identifier 
unionExpr ::= value  .union value 
intersectExpr ::= value  .intersect value 
intersectExpr ::= value intersect value . (97)
relationClosure ::= value  .PLUS 
relationClosure ::= value  .STAR 

*** Shift/reduce conflict on "STAR" with rule 97

relationClosure ::= .value STAR 
value ::= .intersectExpr 
intersectExpr ::= value intersect value . (97)

*** Shift/reduce conflict on "PLUS" with rule 97

relationClosure ::= .value PLUS 
value ::= .intersectExpr 
intersectExpr ::= value intersect value . (97)

*** Shift/reduce conflict on "intersect" with rule 97

intersectExpr ::= .value intersect value 
value ::= .intersectExpr 
intersectExpr ::= value intersect value . (97)

*** Shift/reduce conflict on "union" with rule 97

unionExpr ::= .value union value 
value ::= .intersectExpr 
intersectExpr ::= value intersect value . (97)

*** Shift/reduce conflict on "DOT" with rule 97

tupleSlot ::= .value DOT identifier 
value ::= .intersectExpr 
intersectExpr ::= value intersect value . (97)

*** Shift/reduce conflict on "LEFTBRACKET" with rule 97

mapLookup ::= .value LEFTBRACKET value RIGHTBRACKET 
value ::= .intersectExpr 
intersectExpr ::= value intersect value . (97)




STATE 80 -----------------------------------------------------------------------
( 56 )

mapLookup ::= value  .LEFTBRACKET value RIGHTBRACKET 
tupleSlot ::= value  .DOT identifier 
unionExpr ::= value  .union value 
unionExpr ::= value union value . (96)
intersectExpr ::= value  .intersect value 
relationClosure ::= value  .PLUS 
relationClosure ::= value  .STAR 

*** Shift/reduce conflict on "STAR" with rule 96

relationClosure ::= .value STAR 
value ::= .unionExpr 
unionExpr ::= value union value . (96)

*** Shift/reduce conflict on "PLUS" with rule 96

relationClosure ::= .value PLUS 
value ::= .unionExpr 
unionExpr ::= value union value . (96)

*** Shift/reduce conflict on "intersect" with rule 96

intersectExpr ::= .value intersect value 
value ::= .unionExpr 
unionExpr ::= value union value . (96)

*** Shift/reduce conflict on "union" with rule 96

unionExpr ::= .value union value 
value ::= .unionExpr 
unionExpr ::= value union value . (96)

*** Shift/reduce conflict on "DOT" with rule 96

tupleSlot ::= .value DOT identifier 
value ::= .unionExpr 
unionExpr ::= value union value . (96)

*** Shift/reduce conflict on "LEFTBRACKET" with rule 96

mapLookup ::= .value LEFTBRACKET value RIGHTBRACKET 
value ::= .unionExpr 
unionExpr ::= value union value . (96)




STATE 92 -----------------------------------------------------------------------
( 78 )

optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "EOF_TOKEN" between rule 82 and 85

'$accept' ::= .compilationUnit 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
'$accept' ::= .compilationUnit 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "RIGHTBRACE" between rule 82 and 85

setLiteral ::= LEFTBRACE  .values RIGHTBRACE 
values ::= .valueList 
valueList ::= .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
setLiteral ::= LEFTBRACE  .values RIGHTBRACE 
values ::= .valueList 
valueList ::= .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "LEFTBRACE" between rule 82 and 85

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "RIGHTPAREN" between rule 82 and 85

optArgList ::= LEFTPAREN  .values RIGHTPAREN 
values ::= .valueList 
valueList ::= .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
optArgList ::= LEFTPAREN  .values RIGHTPAREN 
values ::= .valueList 
valueList ::= .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "RIGHTBRACKET" between rule 82 and 85

mapLookup ::= value LEFTBRACKET  .value RIGHTBRACKET 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
mapLookup ::= value LEFTBRACKET  .value RIGHTBRACKET 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "LEFTBRACKET" between rule 82 and 85

mapLookup ::= .value LEFTBRACKET value RIGHTBRACKET 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
mapLookup ::= .value LEFTBRACKET value RIGHTBRACKET 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "STAR" between rule 82 and 85

relationClosure ::= .value STAR 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
relationClosure ::= .value STAR 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "PLUS" between rule 82 and 85

relationClosure ::= .value PLUS 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
relationClosure ::= .value PLUS 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "ARROW" between rule 82 and 85

mapping ::= .value ARROW value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
mapping ::= .value ARROW value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "GREATER" between rule 82 and 85

tupleLiteral ::= LESS  .values GREATER 
values ::= .valueList 
valueList ::= .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
tupleLiteral ::= LESS  .values GREATER 
values ::= .valueList 
valueList ::= .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "LESS" between rule 82 and 85

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "DOT" between rule 82 and 85

tupleSlot ::= .value DOT identifier 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
tupleSlot ::= .value DOT identifier 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "COMMA" between rule 82 and 85

valueList ::= .value COMMA valueList 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
valueList ::= .value COMMA valueList 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "COLON" between rule 82 and 85

caseSpec ::= identifier EQUAL  .value COLON value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
caseSpec ::= identifier EQUAL  .value COLON value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "StringLiteral" between rule 82 and 85

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "DoubleLiteral" between rule 82 and 85

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "IntegerLiteral" between rule 82 and 85

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "IDENTIFIER" between rule 82 and 85

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "union" between rule 82 and 85

unionExpr ::= .value union value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
unionExpr ::= .value union value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "type" between rule 82 and 85

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "true" between rule 82 and 85

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "string" between rule 82 and 85

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "set" between rule 82 and 85

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "rules" between rule 82 and 85

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "relation" between rule 82 and 85

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "ref" between rule 82 and 85

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "else" between rule 82 and 85

caseList ::= .caseList caseSpec 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
caseList ::= .caseList caseSpec 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "intersect" between rule 82 and 85

intersectExpr ::= .value intersect value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
intersectExpr ::= .value intersect value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "int" between rule 82 and 85

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "false" between rule 82 and 85

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "estimates" between rule 82 and 85

analysisSpecification ::= analysis identifier  .constraintsDef estimatesDef 
                          satisfyDef end 
constraintsDef ::= constraints  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
analysisSpecification ::= analysis identifier  .constraintsDef estimatesDef 
                          satisfyDef end 
constraintsDef ::= constraints  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "double" between rule 82 and 85

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "case" between rule 82 and 85

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW  .value 
value ::= .unionExpr 
unionExpr ::= value union  .value 
value ::= .intersectExpr 
intersectExpr ::= value intersect  .value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= else  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "boolean" between rule 82 and 85

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "atype" between rule 82 and 85

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)

*** Reduce/reduce conflict on "analysis" between rule 82 and 85

compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .algebraicTypeValue 
algebraicTypeValue ::= identifier  .optArgList 
optArgList ::= LEFTPAREN values RIGHTPAREN . (82)
------------------------------------------------------------------------------
compilationUnit ::= .compilationUnit topLevelDeclaration 
compilationUnit ::= compilationUnit  .topLevelDeclaration 
topLevelDeclaration ::= .variableDeclaration 
variableDeclaration ::= typeName identifier  .value 
value ::= .functionCall 
functionCall ::= identifier LEFTPAREN values RIGHTPAREN . (85)




STATE 93 -----------------------------------------------------------------------
( 84 )

mapping ::= value ARROW value . (72)
mapLookup ::= value  .LEFTBRACKET value RIGHTBRACKET 
tupleSlot ::= value  .DOT identifier 
unionExpr ::= value  .union value 
intersectExpr ::= value  .intersect value 
relationClosure ::= value  .PLUS 
relationClosure ::= value  .STAR 

*** Shift/reduce conflict on "LEFTBRACKET" with rule 72

mappingList ::= .mappingList mapping 
mappingList ::= .mapping 
mapping ::= value ARROW value . (72)




STATE 100 ----------------------------------------------------------------------
( 97 )

mapLookup ::= value  .LEFTBRACKET value RIGHTBRACKET 
tupleSlot ::= value  .DOT identifier 
caseSpec ::= identifier EQUAL value COLON value . (93)
unionExpr ::= value  .union value 
intersectExpr ::= value  .intersect value 
relationClosure ::= value  .PLUS 
relationClosure ::= value  .STAR 

*** Shift/reduce conflict on "STAR" with rule 93

relationClosure ::= .value STAR 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= identifier EQUAL value COLON value . (93)

*** Shift/reduce conflict on "PLUS" with rule 93

relationClosure ::= .value PLUS 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= identifier EQUAL value COLON value . (93)

*** Shift/reduce conflict on "intersect" with rule 93

intersectExpr ::= .value intersect value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= identifier EQUAL value COLON value . (93)

*** Shift/reduce conflict on "union" with rule 93

unionExpr ::= .value union value 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= identifier EQUAL value COLON value . (93)

*** Shift/reduce conflict on "DOT" with rule 93

tupleSlot ::= .value DOT identifier 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= identifier EQUAL value COLON value . (93)

*** Shift/reduce conflict on "LEFTBRACKET" with rule 93

mapLookup ::= .value LEFTBRACKET value RIGHTBRACKET 
value ::= .caseExpr 
caseExpr ::= case  .caseList 
caseList ::= .caseSpec 
caseSpec ::= identifier EQUAL value COLON value . (93)




***Warning: E:/RMF/eclipse/workspaces/imp-3.2/org.eclipse.imp.asl/src/org/eclipse/imp/asl/parser/ASLParser.g is not LALR(1).


Number of Terminals: 49
Number of Nonterminals: 60
Number of Productions: 118
Number of Items: 336
Number of Scopes: 12
Number of States: 116
Number of Shift actions: 228
Number of Goto actions: 98
Number of Shift/Reduce actions: 237
Number of Goto/Reduce actions: 349
Number of Reduce actions: 413
Number of Shift-Reduce conflicts: 32
Number of Reduce-Reduce conflicts: 112

Number of entries in base Action Table: 563
Additional space required for compaction of Action Table: 0.1%

Number of unique terminal states: 77
Number of Shift actions saved by merging: 238
Number of Conflict points saved by merging: 0
Number of Reduce actions saved by merging: 35
Number of Reduce saved by default: 376

Number of entries in Terminal Action Table: 306
Additional space required for compaction of Terminal Table: 9.1%

Actions in Compressed Tables:
     Number of Shifts: 139
     Number of Shift/Reduces: 88
     Number of Gotos: 98
     Number of Goto/Reduces: 349
     Number of Reduces: 2
     Number of Defaults: 33

Parsing Tables storage:
    Storage required for BASE_CHECK: 682 Bytes
    Storage required for BASE_ACTION: 1366 Bytes
    Storage required for TERM_CHECK: 352 Bytes
    Storage required for TERM_ACTION: 670 Bytes

Error maps storage:
    Storage required for ACTION_SYMBOLS_BASE map: 234 Bytes
    Storage required for ACTION_SYMBOLS_RANGE map: 232 Bytes
    Storage required for NACTION_SYMBOLS_BASE map: 117 Bytes
    Storage required for NACTION_SYMBOLS_RANGE map: 52 Bytes
    Storage required for TERMINAL_INDEX map: 50 Bytes
    Storage required for NON_TERMINAL_INDEX map: 62 Bytes

    Storage required for SCOPE_PREFIX map: 12 Bytes
    Storage required for SCOPE_SUFFIX map: 12 Bytes
    Storage required for SCOPE_LHS_SYMBOL map: 12 Bytes
    Storage required for SCOPE_LOOK_AHEAD map: 12 Bytes
    Storage required for SCOPE_STATE_SET map: 12 Bytes
    Storage required for SCOPE_RIGHT_SIDE map: 55 Bytes
    Storage required for SCOPE_STATE map: 80 Bytes
    Storage required for IN_SYMB map: 117 Bytes

    Number of names: 79
    Number of characters in name: 588
